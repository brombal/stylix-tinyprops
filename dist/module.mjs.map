{"mappings":";;AAAA;AAgKA,MAAM,kCAAY,CAAA,GAAA,kBAAU,EAAE;IAC5B,QAAQ;QAAE,SAAS;IAAS;IAC5B,OAAO;QAAE,SAAS;IAAQ;IAC1B,gBAAgB;QAAE,SAAS;IAAe;IAC1C,UAAU;QAAE,UAAU;IAAW;IACjC,cAAc;QACZ,UAAU;QACV,KAAK;QACL,MAAM;QACN,WAAW;IACb;IACA,YAAY;QAAE,UAAU;QAAY,KAAK;QAAG,MAAM;QAAG,OAAO;QAAQ,QAAQ;IAAO;IAEnF,UAAU;QAAE,UAAU;IAAW;IAEjC,SAAS;QAAE,SAAS;IAAO;IAC3B,YAAY;QAAE,SAAS;IAAc;IACrC,iBAAiB,CAAC,MAAS,CAAA;YAAE,QAAQ;gBAAE,MAAM;YAAI;QAAE,CAAA;IACnD,eAAe;QAAE,SAAS;QAAQ,kBAAkB;IAAS;IAC7D,eAAe;QAAE,SAAS;QAAQ,YAAY;QAAU,gBAAgB;IAAS;IAEjF,IAAI,CAAC,MAAS,CAAA;YAAE,YAAY;QAAI,CAAA;IAChC,YAAY,CAAC,MAAS,CAAA;YAAE,iBAAiB;QAAI,CAAA;IAE7C,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI,CAAC,MAAS,CAAA;YAAE,YAAY;YAAK,aAAa;QAAI,CAAA;IAClD,IAAI,CAAC,MAAS,CAAA;YAAE,WAAW;YAAK,cAAc;QAAI,CAAA;IAElD,GAAG;IACH,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI,CAAC,MAAS,CAAA;YAAE,aAAa;YAAK,cAAc;QAAI,CAAA;IACpD,IAAI,CAAC,MAAS,CAAA;YAAE,YAAY;YAAK,eAAe;QAAI,CAAA;IAEpD,MAAM;QAAE,YAAY;IAAO;IAC3B,QAAQ;QAAE,WAAW;IAAS;IAE9B,eAAe;QAAE,WAAW;IAAS;IACrC,cAAc;QAAE,WAAW;IAAQ;IACnC,aAAa;QAAE,WAAW;IAAO;IAEjC,QAAQ;QAAE,UAAU;QAAU,YAAY;IAAS;IACnD,UAAU;QAAE,cAAc;QAAY,UAAU;QAAU,YAAY;IAAS;AACjF;IAEA,2CAAe","sources":["src/index.ts"],"sourcesContent":["import { customProps } from '@stylix/core';\nimport { Property } from 'csstype';\n\ndeclare module '@stylix/core' {\n  interface StylixPropsExtensions {\n    /**\n     * Shorthand for display=\"inline\"\n     */\n    inline: boolean;\n    /**\n     * Shorthand for display=\"block\"\n     */\n    block: boolean;\n    /**\n     * Shorthand for display=\"inline-block\"\n     */\n    inlineBlock: boolean;\n    /**\n     * Shorthand for position=\"absolute\"\n     */\n    absolute: boolean;\n    /**\n     * Shorthand for position=\"absolute\" transform=\"translate(-50%, -50%)\"\n     */\n    'abs-center': boolean;\n    /**\n     * Shorthand for\n     * position: absolute;\n     * left: 0;\n     * top: 0;\n     * width: 100%;\n     * height: 100%;\n     */\n    'abs-fill': boolean;\n    /**\n     * Shorthand for position=\"relative\"\n     */\n    relative: boolean;\n\n    /**\n     * Shorthand for display=\"flex\"\n     */\n    flexbox: boolean;\n    /**\n     * Shorthand for display=\"inline-flex\"\n     */\n    inlineFlex: boolean;\n    /**\n     * Shorthand for flex=\"...\" on all children (i.e. { \"& > *\": { flex: \"...\" } })\n     */\n    'flex-children': Property.Flex<string | number>;\n    /**\n     * Shorthand for display=\"flex\" flex-direction=\"column\"\n     */\n    'flex-column': boolean;\n    /**\n     * Shorthand for display=\"flex\" align-items=\"center\" justify-content=\"center\"\n     */\n    'flex-center': boolean;\n\n    /**\n     * Shorthand for background\n     */\n    bg: Property.Background;\n    /**\n     * Shorthand for background-color\n     */\n    'bg-color': Property.BackgroundColor;\n\n    /**\n     * Shorthand for margin\n     */\n    m: Property.Margin<string | number>;\n    /**\n     * Shorthand for margin-top\n     */\n    mt: Property.MarginTop<string | number>;\n    /**\n     * Shorthand for margin-right\n     */\n    mr: Property.MarginRight<string | number>;\n    /**\n     * Shorthand for margin-bottom\n     */\n    mb: Property.MarginBottom<string | number>;\n    /**\n     * Shorthand for margin-left\n     */\n    ml: Property.MarginLeft<string | number>;\n    /**\n     * Shorthand for margin-left and margin-right\n     */\n    mh: Property.MarginTop<string | number>;\n    /**\n     * Shorthand for margin-top and margin-bottom\n     */\n    mv: Property.MarginRight<string | number>;\n\n    /**\n     * Shorthand for padding\n     */\n    p: Property.Padding<string | number>;\n    /**\n     * Shorthand for padding-top\n     */\n    pt: Property.PaddingTop<string | number>;\n    /**\n     * Shorthand for padding-right\n     */\n    pr: Property.PaddingRight<string | number>;\n    /**\n     * Shorthand for padding-bottom\n     */\n    pb: Property.PaddingBottom<string | number>;\n    /**\n     * Shorthand for padding-left\n     */\n    pl: Property.PaddingLeft<string | number>;\n    /**\n     * Shorthand for padding-left and padding-right\n     */\n    ph: Property.PaddingTop<string | number>;\n    /**\n     * Shorthand for padding-top and padding-bottom\n     */\n    pv: Property.PaddingRight<string | number>;\n\n    /**\n     * Shorthand for font-weight=\"bold\"\n     */\n    bold: boolean;\n    /**\n     * Shorthand for font-stylix=\"italic\"\n     */\n    italic: boolean;\n\n    /**\n     * Shorthand for text-align=\"center\"\n     */\n    'text-center': boolean;\n    /**\n     * Shorthand for text-align=\"right\"\n     */\n    'text-right': boolean;\n    /**\n     * Shorthand for text-align=\"left\"\n     */\n    'text-left': boolean;\n\n    /**\n     * Shorthand for flex-wrap=\"nowrap\" white-space=\"nowrap\"\n     */\n    nowrap: boolean;\n    /**\n     * Shorthand for text-overflow=\"ellipsis\" overflow=\"hidden\" white-space=\"nowrap\"\n     */\n    ellipsis: boolean;\n  }\n}\n\nconst tinyProps = customProps({\n  inline: { display: 'inline' },\n  block: { display: 'block' },\n  'inline-block': { display: 'inline-block' },\n  absolute: { position: 'absolute' },\n  'abs-center': {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n  },\n  'abs-fill': { position: 'absolute', top: 0, left: 0, width: '100%', height: '100%' },\n\n  relative: { position: 'relative' },\n\n  flexbox: { display: 'flex' },\n  inlineFlex: { display: 'inline-flex' },\n  'flex-children': (val) => ({ '&> *': { flex: val } }),\n  'flex-column': { display: 'flex', 'flex-direction': 'column' },\n  'flex-center': { display: 'flex', alignItems: 'center', justifyContent: 'center' },\n\n  bg: (val) => ({ background: val }),\n  'bg-color': (val) => ({ backgroundColor: val }),\n\n  m: 'margin',\n  mt: 'margin-top',\n  mr: 'margin-right',\n  mb: 'margin-bottom',\n  ml: 'margin-left',\n  mh: (val) => ({ marginLeft: val, marginRight: val }),\n  mv: (val) => ({ marginTop: val, marginBottom: val }),\n\n  p: 'padding',\n  pt: 'padding-top',\n  pr: 'padding-right',\n  pb: 'padding-bottom',\n  pl: 'padding-left',\n  ph: (val) => ({ paddingLeft: val, paddingRight: val }),\n  pv: (val) => ({ paddingTop: val, paddingBottom: val }),\n\n  bold: { fontWeight: 'bold' },\n  italic: { fontStyle: 'italic' },\n\n  'text-center': { textAlign: 'center' },\n  'text-right': { textAlign: 'right' },\n  'text-left': { textAlign: 'left' },\n\n  nowrap: { flexWrap: 'nowrap', whiteSpace: 'nowrap' },\n  ellipsis: { textOverflow: 'ellipsis', overflow: 'hidden', whiteSpace: 'nowrap' },\n});\n\nexport default tinyProps;\n"],"names":[],"version":3,"file":"module.mjs.map"}